
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import java.lang.String;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.RestoreAction;

public class VendingMachine {

    private float totalCredit = 0f;
    private float coinReturn = 0f;

    private String machineMessage = "INSERT COIN";
    private boolean firstCheckOfMessageAfterMakingSelection = false;

    public final float NICKEL_VALUE = 0.05f;
    public final float DIME_VALUE = 0.1f;
    public final float QUARTER_VALUE = 0.25f;
    public final float UNACCEPTED_COIN_VALUE = 0f;

    public InventoryItem COLA = new InventoryItem("cola", 1f);
    public InventoryItem CHIPS = new InventoryItem("chips", 0.5f);
    public InventoryItem CANDY = new InventoryItem("candy", 0.65f);
    public InventoryItem NO_ITEM = new InventoryItem("", 0f);
    private InventoryItem selectedItem = NO_ITEM;
    private final float NO_CREDIT = 0f;

    public void addCoin(String coin) {
        totalCredit += getCoinValue(coin);
        return;
    }

    public float getCoinValue(String coin) {
        if (coin == "nickel") {
            return NICKEL_VALUE;
        }
        else if (coin == "dime") {
            return DIME_VALUE;
        }
        else if (coin == "quarter") {
            return QUARTER_VALUE;
        }
        else {
            return UNACCEPTED_COIN_VALUE;
        }
    }

    public float getTotalCredit() {
        return totalCredit;
    }

    public String getMachineMessage() {
        return setMachineMessageToDisplayBetweenDefaultAndSpecialMessages();
    }

    public String setMachineMessageToDisplayBetweenDefaultAndSpecialMessages() {
        String messageToReturn = machineMessage;
        setMachineMessageToDefaults();
        if (messageToReturn != makeCreditMessage() && messageToReturn != "INSERT COIN") {
            return messageToReturn;
        }
        return machineMessage;
    }

    public void selectItem(InventoryItem item) {
        selectedItem = item;
        firstCheckOfMessageAfterMakingSelection = true;
        if (item.soldOut) {
            machineMessage = "SOLD OUT";
            return;
        }
        if (totalCredit >= item.cost) {
            machineMessage = "THANK YOU";
            buySelection();
        }
        else if (totalCredit < item.cost) {
            machineMessage = "PRICE: $" + String.format("%.2f", item.cost);
        }
    }

    public void setMachineMessageToDefaults() {
        if (totalCredit == NO_CREDIT) {
            machineMessage = "INSERT COIN";
        }
        else if (totalCredit > NO_CREDIT) {
            machineMessage = makeCreditMessage();
        }
        // if (firstCheckOfMessageAfterMakingSelection) {
        //     if (selectedItem.soldOut) {
        //         machineMessage = "SOLD OUT";
        //         selectedItem = NO_ITEM;
        //         return;
        //     }
        //     firstCheckOfMessageAfterMakingSelection = false;
        //     if (totalCredit < selectedItem.cost) {
        //         machineMessage = "PRICE: $" + String.format("%.2f", selectedItem.cost);
        //     }
        //     else if (totalCredit >= selectedItem.cost) {
        //         machineMessage = "THANK YOU";
        //     }
        // }
        // else {
        //     if (totalCredit == NO_CREDIT) {
        //         machineMessage = "INSERT COIN";
        //     }
        //     else if (totalCredit < selectedItem.cost) {
        //         machineMessage = "CREDIT: $" + String.format("%.2f", totalCredit);
        //     }
        //     else {
        //         machineMessage = "INSERT COIN";
        //     }
        // }
    }

    public String makeCreditMessage() {
        return "CREDIT: $" + String.format("%.2f", totalCredit);
    }

    public void buySelection() {
        makeChange();
        selectedItem = NO_ITEM;
    }

    public void returnCoins() {
        coinReturn = totalCredit;
        totalCredit = NO_CREDIT;
        selectedItem = NO_ITEM;
        setMachineMessageToDefaults();
    }

    public void makeChange() {
        coinReturn = totalCredit - selectedItem.cost;
        totalCredit = NO_CREDIT;
    }

    public String checkCoinReturn() {
        return "COIN RETURN: $" + String.format("%.2f", coinReturn);
    }

    public String getSelectedItemName() {
        return selectedItem.name;
    }

    public void makeItemSoldOut(InventoryItem item) {
        item.setSoldOut(true);
    }

    public class InventoryItem {
        private String name;
        private float cost;
        private boolean soldOut = false; 
        InventoryItem(String name, float cost) {
            this.name = name;
            this.cost = cost;
        }

        public void setSoldOut(boolean setting) {
            soldOut = setting;
        }
    }
}